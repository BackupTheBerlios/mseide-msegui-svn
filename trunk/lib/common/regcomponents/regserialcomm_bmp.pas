unit regserialcomm_bmp;
{$ifdef FPC}{$mode objfpc}{$h+}{$endif}

interface

implementation
uses
 mseclasses,msebitmap;

const
 objdata_tcommport: record size: integer; data: array[0..685] of byte end =
      (size: 686; data: (
  84,80,70,48,11,116,98,105,116,109,97,112,99,111,109,112,9,116,99,111,
  109,109,112,111,114,116,12,98,105,116,109,97,112,46,105,109,97,103,101,10,
  128,2,0,0,0,0,0,0,0,0,0,0,24,0,0,0,24,0,0,0,
  76,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,123,
  0,0,0,3,255,0,255,3,0,0,0,3,255,0,255,2,0,0,0,1,
  255,0,255,1,0,0,0,4,255,0,255,6,0,0,0,1,255,0,255,3,
  0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,3,0,0,0,1,
  255,0,255,1,0,0,0,2,255,0,255,1,0,0,0,1,255,0,255,2,
  0,0,0,1,255,0,255,5,0,0,0,1,255,0,255,5,0,0,0,1,
  255,0,255,3,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,2,
  0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,5,0,0,0,1,
  255,0,255,5,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,1,
  0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,2,0,0,0,1,
  255,0,255,5,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,1,
  0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,1,0,0,0,1,
  255,0,255,2,0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,6,
  0,0,0,3,255,0,255,3,0,0,0,3,255,0,255,2,0,0,0,1,
  255,0,255,2,0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,45,
  0,0,0,1,255,0,255,23,0,0,0,1,255,0,255,7,0,0,0,1,
  255,0,255,1,0,0,0,2,255,0,255,3,0,0,0,3,255,0,255,2,
  0,0,0,1,255,0,255,1,0,0,0,4,255,0,255,6,0,0,0,2,
  255,0,255,2,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,3,
  0,0,0,1,255,0,255,1,0,0,0,2,255,0,255,2,0,0,0,1,
  255,0,255,7,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,1,
  0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,1,0,0,0,1,
  255,0,255,3,0,0,0,1,255,0,255,7,0,0,0,1,255,0,255,3,
  0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,3,0,0,0,1,
  255,0,255,1,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,7,
  0,0,0,2,255,0,255,2,0,0,0,1,255,0,255,1,0,0,0,1,
  255,0,255,3,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,3,
  0,0,0,1,255,0,255,7,0,0,0,1,255,0,255,1,0,0,0,2,
  255,0,255,3,0,0,0,3,255,0,255,2,0,0,0,1,255,0,255,3,
  0,0,0,2,255,0,255,6,0,0,0,1,255,0,255,23,0,0,0,1,
  255,0,255,69,0,0)
 );

const
 objdata_tasciicommport: record size: integer; data: array[0..706] of byte end =
      (size: 707; data: (
  84,80,70,48,11,116,98,105,116,109,97,112,99,111,109,112,14,116,97,115,
  99,105,105,99,111,109,109,112,111,114,116,12,98,105,116,109,97,112,46,105,
  109,97,103,101,10,144,2,0,0,0,0,0,0,0,0,0,0,24,0,0,
  0,24,0,0,0,92,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,255,0,255,115,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,
  28,0,0,0,3,255,0,255,3,0,0,0,3,255,0,255,3,0,0,0,
  3,255,0,255,2,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,
  3,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,1,0,0,0,
  1,255,0,255,3,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,
  3,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,1,0,0,0,
  1,255,0,255,4,0,0,0,4,255,0,255,2,0,0,0,2,255,0,255,
  3,0,0,0,1,255,0,255,5,0,0,0,1,255,0,255,1,0,0,0,
  1,255,0,255,3,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,
  4,0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,5,0,0,0,
  1,255,0,255,1,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,
  2,0,0,0,2,255,0,255,1,0,0,0,1,255,0,255,3,0,0,0,
  1,255,0,255,1,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,
  1,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,4,0,0,0,
  2,255,0,255,1,0,0,0,1,255,0,255,2,0,0,0,3,255,0,255,
  3,0,0,0,3,255,0,255,2,0,0,0,1,255,0,255,1,0,0,0,
  1,255,0,255,76,0,0,0,3,255,0,255,3,0,0,0,3,255,0,255,
  2,0,0,0,1,255,0,255,1,0,0,0,4,255,0,255,6,0,0,0,
  1,255,0,255,3,0,0,0,1,255,0,255,1,0,0,0,1,255,0,255,
  3,0,0,0,1,255,0,255,1,0,0,0,2,255,0,255,1,0,0,0,
  1,255,0,255,2,0,0,0,1,255,0,255,5,0,0,0,1,255,0,255,
  5,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,1,0,0,0,
  1,255,0,255,2,0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,
  5,0,0,0,1,255,0,255,5,0,0,0,1,255,0,255,3,0,0,0,
  1,255,0,255,1,0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,
  2,0,0,0,1,255,0,255,5,0,0,0,1,255,0,255,3,0,0,0,
  1,255,0,255,1,0,0,0,1,255,0,255,3,0,0,0,1,255,0,255,
  1,0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,2,0,0,0,
  1,255,0,255,6,0,0,0,3,255,0,255,3,0,0,0,3,255,0,255,
  2,0,0,0,1,255,0,255,2,0,0,0,1,255,0,255,2,0,0,0,
  1,255,0,255,76,0,0)
 );

const
 objdata_tcommselector: record size: integer; data: array[0..597] of byte end =
      (size: 598; data: (
  84,80,70,48,11,116,98,105,116,109,97,112,99,111,109,112,13,116,99,111,
  109,109,115,101,108,101,99,116,111,114,12,98,105,116,109,97,112,46,105,109,
  97,103,101,10,36,2,0,0,0,0,0,0,0,0,0,0,24,0,0,0,
  24,0,0,0,240,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  255,0,255,146,128,128,128,20,255,0,255,4,128,128,128,1,0,0,0,18,
  255,255,255,1,255,0,255,4,128,128,128,1,0,0,0,1,255,255,255,10,
  255,0,255,5,128,128,128,1,192,192,192,1,255,255,255,1,255,0,255,4,
  128,128,128,1,0,0,0,1,255,255,255,10,255,0,255,5,128,128,128,1,
  192,192,192,1,255,255,255,1,255,0,255,4,128,128,128,1,0,0,0,1,
  255,255,255,2,0,0,0,1,255,255,255,3,0,0,0,1,255,255,255,3,
  255,0,255,5,128,128,128,1,192,192,192,1,255,255,255,1,255,0,255,4,
  128,128,128,1,0,0,0,1,255,255,255,1,0,0,0,1,255,255,255,1,
  0,0,0,1,255,255,255,1,0,0,0,1,255,255,255,1,0,0,0,1,
  255,255,255,2,0,0,0,5,128,128,128,1,192,192,192,1,255,255,255,1,
  255,0,255,4,128,128,128,1,0,0,0,1,255,255,255,1,0,0,0,1,
  255,255,255,3,0,0,0,1,255,255,255,1,0,0,0,1,255,255,255,2,
  255,0,255,1,0,0,0,3,255,0,255,1,128,128,128,1,192,192,192,1,
  255,255,255,1,255,0,255,4,128,128,128,1,0,0,0,1,255,255,255,1,
  0,0,0,1,255,255,255,3,0,0,0,1,255,255,255,1,0,0,0,1,
  255,255,255,2,255,0,255,2,0,0,0,1,255,0,255,2,128,128,128,1,
  192,192,192,1,255,255,255,1,255,0,255,4,128,128,128,1,0,0,0,1,
  255,255,255,1,0,0,0,1,255,255,255,1,0,0,0,1,255,255,255,1,
  0,0,0,1,255,255,255,1,0,0,0,1,255,255,255,2,255,0,255,5,
  128,128,128,1,192,192,192,1,255,255,255,1,255,0,255,4,128,128,128,1,
  0,0,0,1,255,255,255,2,0,0,0,1,255,255,255,3,0,0,0,1,
  255,255,255,3,255,0,255,5,128,128,128,1,192,192,192,1,255,255,255,1,
  255,0,255,4,128,128,128,1,0,0,0,1,255,255,255,10,128,128,128,6,
  192,192,192,1,255,255,255,1,255,0,255,4,128,128,128,1,192,192,192,18,
  255,255,255,1,255,0,255,4,255,255,255,20,255,0,255,122,0,0)
 );

const
 objdata_tsercommcomp: record size: integer; data: array[0..2019] of byte end =
      (size: 2020; data: (
  84,80,70,48,11,116,98,105,116,109,97,112,99,111,109,112,12,116,115,101,
  114,99,111,109,109,99,111,109,112,23,98,105,116,109,97,112,46,116,114,97,
  110,115,112,97,114,101,110,116,99,111,108,111,114,4,6,0,0,128,14,98,
  105,116,109,97,112,46,111,112,116,105,111,110,115,11,10,98,109,111,95,109,
  97,115,107,101,100,13,98,109,111,95,99,111,108,111,114,109,97,115,107,0,
  12,98,105,116,109,97,112,46,105,109,97,103,101,10,108,7,0,0,0,0,
  0,0,6,0,0,0,24,0,0,0,24,0,0,0,20,2,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,208,208,208,75,0,0,0,2,208,208,
  208,2,0,0,0,6,208,208,208,2,0,0,0,4,208,208,208,1,0,0,
  0,2,208,208,208,5,0,0,0,3,208,208,208,1,0,0,0,12,208,208,
  208,1,0,0,0,2,208,208,208,5,0,0,0,3,208,208,208,1,0,0,
  0,2,208,208,208,1,0,0,0,6,208,208,208,1,0,0,0,5,208,208,
  208,4,0,0,0,4,208,208,208,1,0,0,0,4,208,208,208,2,0,0,
  0,3,208,208,208,1,0,0,0,5,208,208,208,4,0,0,0,5,208,208,
  208,1,0,0,0,4,208,208,208,1,0,0,0,2,208,208,208,2,0,0,
  0,5,208,208,208,4,0,0,0,6,208,208,208,2,0,0,0,2,208,208,
  208,1,0,0,0,2,208,208,208,2,0,0,0,1,208,208,208,1,0,0,
  0,3,208,208,208,4,0,0,0,2,208,208,208,1,0,0,0,7,208,208,
  208,1,0,0,0,2,208,208,208,2,0,0,0,1,208,208,208,1,0,0,
  0,3,208,208,208,4,0,0,0,1,208,208,208,2,0,0,0,6,208,208,
  208,2,0,0,0,2,208,208,208,2,0,0,0,1,208,208,208,2,0,0,
  0,2,208,208,208,51,0,0,0,4,208,208,208,2,0,0,0,3,208,208,
  208,1,0,0,0,2,208,208,208,2,0,0,0,4,208,208,208,2,0,0,
  0,2,208,208,208,2,0,0,0,4,208,208,208,1,0,0,0,8,208,208,
  208,1,0,0,0,5,208,208,208,1,0,0,0,2,208,208,208,1,0,0,
  0,2,208,208,208,2,0,0,0,4,208,208,208,1,0,0,0,5,208,208,
  208,1,0,0,0,5,208,208,208,1,0,0,0,2,208,208,208,1,0,0,
  0,2,208,208,208,4,0,0,0,1,208,208,208,3,0,0,0,4,208,208,
  208,1,0,0,0,5,208,208,208,1,0,0,0,2,208,208,208,1,0,0,
  0,2,208,208,208,4,0,0,0,1,208,208,208,3,0,0,0,13,208,208,
  208,1,0,0,0,2,208,208,208,2,0,0,0,4,208,208,208,1,0,0,
  0,14,208,208,208,2,0,0,0,14,208,208,208,1,0,0,0,7,208,208,
  208,2,0,0,0,4,208,208,208,1,0,0,0,4,208,208,208,1,0,0,
  0,4,208,208,208,1,0,0,0,5,208,208,208,1,0,0,0,1,208,208,
  208,73,32,5,0,0,0,0,0,75,27,27,27,1,166,166,166,1,0,0,
  0,2,15,15,15,1,177,177,177,1,205,205,205,1,82,82,82,1,20,20,
  20,1,141,141,141,1,0,0,0,2,104,104,104,1,56,56,56,1,168,168,
  168,1,7,7,7,1,0,0,0,1,92,92,92,1,38,38,38,1,0,0,
  0,5,96,96,96,1,196,196,196,1,24,24,24,1,0,0,0,1,125,125,
  125,1,82,82,82,1,21,21,21,1,201,201,201,1,5,5,5,1,167,167,
  167,1,38,38,38,1,7,7,7,1,188,188,188,1,2,2,2,1,227,227,
  227,1,103,103,103,1,0,0,0,1,118,118,118,1,49,49,49,1,0,0,
  0,5,160,160,160,1,83,83,83,1,98,98,98,1,0,0,0,1,137,137,
  137,1,64,64,64,1,0,0,0,1,46,46,46,1,9,9,9,1,48,48,
  48,1,153,153,153,1,100,100,100,1,89,89,89,1,0,0,0,1,173,173,
  173,1,191,191,191,1,4,4,4,1,118,118,118,1,49,49,49,1,0,0,
  0,4,1,1,1,1,173,173,173,1,10,10,10,1,166,166,166,1,0,0,
  0,1,31,31,31,1,218,218,218,1,179,179,179,1,58,58,58,1,0,0,
  0,2,171,171,171,1,178,178,178,1,2,2,2,1,0,0,0,1,168,168,
  168,1,109,109,109,1,93,93,93,1,118,118,118,1,49,49,49,1,0,0,
  0,4,48,48,48,1,200,200,200,1,128,128,128,1,218,218,218,1,5,5,
  5,1,0,0,0,1,3,3,3,1,77,77,77,1,207,207,207,1,25,25,
  25,1,0,0,0,1,81,81,81,1,115,115,115,1,0,0,0,2,168,168,
  168,1,9,9,9,1,192,192,192,1,120,120,120,1,49,49,49,1,0,0,
  0,4,117,117,117,1,113,113,113,1,80,80,80,1,157,157,157,1,66,66,
  66,1,152,152,152,1,0,0,0,2,104,104,104,1,66,66,66,1,0,0,
  0,1,70,70,70,1,105,105,105,1,0,0,0,2,168,168,168,1,0,0,
  0,1,121,121,121,1,201,201,201,1,49,49,49,1,0,0,0,4,175,175,
  175,1,5,5,5,1,0,0,0,1,53,53,53,1,141,141,141,1,118,118,
  118,1,151,151,151,1,80,80,80,1,188,188,188,1,17,17,17,1,0,0,
  0,1,70,70,70,1,105,105,105,1,0,0,0,2,168,168,168,1,0,0,
  0,1,15,15,15,1,240,240,240,1,49,49,49,1,0,0,0,4,91,91,
  91,1,0,0,0,2,2,2,2,1,96,96,96,1,1,1,1,1,102,102,
  102,1,141,141,141,1,51,51,51,1,0,0,0,2,35,35,35,1,52,52,
  52,1,0,0,0,2,84,84,84,1,0,0,0,2,82,82,82,1,24,24,
  24,1,0,0,0,51,6,6,6,1,104,104,104,1,131,131,131,1,28,28,
  28,1,0,0,0,2,83,83,83,1,147,147,147,1,62,62,62,1,0,0,
  0,1,25,25,25,1,123,123,123,1,0,0,0,2,30,30,30,1,106,106,
  106,1,18,18,18,1,129,129,129,1,0,0,0,2,23,23,23,1,112,112,
  112,1,0,0,0,2,136,136,136,1,125,125,125,1,82,82,82,1,186,186,
  186,1,0,0,0,1,86,86,86,1,189,189,189,1,77,77,77,1,180,180,
  180,1,53,53,53,1,48,48,48,1,249,249,249,1,24,24,24,1,0,0,
  0,1,105,105,105,1,196,196,196,1,35,35,35,1,250,250,250,1,36,36,
  36,1,0,0,0,1,92,92,92,1,208,208,208,1,0,0,0,1,4,4,
  4,1,180,180,180,1,0,0,0,2,93,93,93,1,22,22,22,1,195,195,
  195,1,24,24,24,1,0,0,0,1,19,19,19,1,166,166,166,1,48,48,
  48,1,197,197,197,1,85,85,85,1,0,0,0,1,145,145,145,1,168,168,
  168,1,35,35,35,1,197,197,197,1,98,98,98,1,0,0,0,1,142,142,
  142,1,171,171,171,1,0,0,0,1,37,37,37,1,134,134,134,1,0,0,
  0,4,204,204,204,1,0,0,0,3,177,177,177,1,48,48,48,1,137,137,
  137,1,146,146,146,1,0,0,0,1,144,144,144,1,168,168,168,1,35,35,
  35,1,142,142,142,1,154,154,154,1,0,0,0,1,144,144,144,1,168,168,
  168,1,0,0,0,1,43,43,43,1,131,131,131,1,0,0,0,4,189,189,
  189,1,0,0,0,3,191,191,191,1,48,48,48,1,119,119,119,1,163,163,
  163,1,38,38,38,1,104,104,104,1,168,168,168,1,35,35,35,1,132,132,
  132,1,163,163,163,1,26,26,26,1,117,117,117,1,168,168,168,1,0,0,
  0,1,10,10,10,1,166,166,166,1,0,0,0,2,99,99,99,1,36,36,
  36,1,197,197,197,1,9,9,9,1,0,0,0,1,22,22,22,1,187,187,
  187,1,48,48,48,1,119,119,119,1,146,146,146,1,118,118,118,1,40,40,
  40,1,168,168,168,1,35,35,35,1,132,132,132,1,134,134,134,1,117,117,
  117,1,53,53,53,1,168,168,168,1,0,0,0,2,170,170,170,1,61,61,
  61,1,32,32,32,1,190,190,190,1,3,3,3,1,101,101,101,1,146,146,
  146,1,25,25,25,1,157,157,157,1,93,93,93,1,48,48,48,1,119,119,
  119,1,85,85,85,1,202,202,202,1,0,0,0,1,168,168,168,1,35,35,
  35,1,132,132,132,1,72,72,72,1,212,212,212,1,3,3,3,1,168,168,
  168,1,0,0,0,2,30,30,30,1,161,161,161,1,183,183,183,1,60,60,
  60,1,0,0,0,1,1,1,1,1,123,123,123,1,199,199,199,1,122,122,
  122,1,0,0,0,1,36,36,36,1,89,89,89,1,23,23,23,1,131,131,
  131,1,0,0,0,1,126,126,126,1,26,26,26,1,99,99,99,1,14,14,
  14,1,141,141,141,1,0,0,0,1,126,126,126,1,0,0,0,73,0,0)
 );

initialization
 registerobjectdata(@objdata_tcommport,tbitmapcomp,'tcommport');
 registerobjectdata(@objdata_tasciicommport,tbitmapcomp,'tasciicommport');
 registerobjectdata(@objdata_tcommselector,tbitmapcomp,'tcommselector');
 registerobjectdata(@objdata_tsercommcomp,tbitmapcomp,'tsercommcomp');
end.
